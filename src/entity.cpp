#include "entity.h"

Mesh make_cube()
{
    Mesh cube;

    Vec3f vertices[] = {
        { 1,-1, 1}, { 1,-1,-1}, 
        { 1, 1,-1}, { 1, 1, 1},
        {-1,-1, 1}, {-1,-1,-1}, 
        {-1, 1,-1}, {-1, 1, 1} 
    };


    std::vector<std::array<int, 3>> indicies {
        {4, 0, 3}, 
        {4, 3, 6},
        {0, 1, 2}, 
        {0, 2, 3},
        {1, 5, 6}, 
        {1, 6, 2},
        {5, 4, 7}, 
        {5, 7, 6},
        {7, 3, 2}, 
        {7, 2, 6},
        {0, 5, 1}, 
        {0, 4, 5} 
    };

    for (auto [t0, t1, t2] : indicies) {
        Triangle triangle {vertices[t0], vertices[t1], vertices[t2]};
        cube.triangles.push_back(triangle);
    }
    return cube;
}

// Cube::Cube()
// {
//     vertices = {
//         { 1,-1, 1}, { 1,-1,-1}, 
//         { 1, 1,-1}, { 1, 1, 1},
//         {-1,-1, 1}, {-1,-1,-1}, 
//         {-1, 1,-1}, {-1, 1, 1} 
//     };

//     normals = {
//         { 0, 0, 1}, { 0, 0, 1},
//         { 1, 0, 0}, { 1, 0, 0},
//         { 0, 0,-1}, { 0, 0,-1},
//         {-1, 0, 0}, {-1, 0, 0},
//         { 0, 1, 0}, { 0, 1, 0},
//         { 0,-1, 0}, { 0,-1, 0} 
//     };

//     colors = {
//         0x00000000
//     };

//     triangles = {
//         {{4, 0, 3}, 0, 0}, 
//         {{4, 3, 6}, 0, 0},
//         {{0, 1, 2}, 0, 0}, 
//         {{0, 2, 3}, 0, 0},
//         {{1, 5, 6}, 0, 0}, 
//         {{1, 6, 2}, 0, 0},
//         {{5, 4, 7}, 0, 0}, 
//         {{5, 7, 6}, 0, 0},
//         {{7, 3, 2}, 0, 0}, 
//         {{7, 2, 6}, 0, 0},
//         {{0, 5, 1}, 0, 0}, 
//         {{0, 4, 5}, 0, 0} 
//     };
// }
